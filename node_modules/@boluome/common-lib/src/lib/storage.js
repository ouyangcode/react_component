import {
  parseJSON,
  stringifyJSON,
  compose,
  ifElse,
  equals,
  type,
  always,
  curry
} from '../'

const { localStorage, sessionStorage } = window

const store = {
  local  : localStorage,
  session: sessionStorage
}
// string -> string -> string | object -> empty
export const setStore = (k, v, t = 'local') =>
ifElse(
  compose(equals('String'), type),
  set(k, t),
  oset(k, t),
)(v)

// string -> string -> string | object
export const getStore = (k, t = 'local') =>
{
  try {
    return oget(k, t)
  } catch(err) {
    // console.log(err)
    return get(k, t)
  }
}

// string -> string -> empty
export const removeStore = (k, t = 'local') => remove(k, t)

const get    = curry((k, t) => store[t].getItem(k))

const oget   = curry((k, t) => parseJSON(get(k, t)))

const set    = curry((k, t, v) => store[t].setItem(k, v))

const oset   = curry((k, t, o) => set(k, t, stringifyJSON(o)))

const remove = curry((k, t) => store[t].removeItem(k))
