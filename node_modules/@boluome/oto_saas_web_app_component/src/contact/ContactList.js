import './style/index.scss'
import React, { Component } from 'react'
import { get, send, setStore, getStore } from '@boluome/common-lib'
// import { InfoTable, ValContainer, InfoContainer } from 'cmpt/info'
import { List, WhiteSpace, Icon, SwipeAction, Flex, Modal }    from 'antd-mobile'

import { SlidePage, Mask, Loading }   from '../'

import ContactForm from './ContactForm'
import add_src   from './img/ic_add.png'
import gou_src   from './img/ic_gou.png'

const ListItem = List.Item
const FlexItem = Flex.Item
const alert = Modal.alert

class CustomerList extends Component {
  constructor(props) {
    super(props)
    this.state = {
      contactList: [],
      bContactFormShow: false,
      editContact: {}
    }
  }
  fetchContact() {
    const handleClose = Loading()

    let userId = getStore('customerUserId')
    get('/user/v1/contacts', { userId })
    .then(({ code, data, message }) => {
      // code = 0
      // data = [{"name":"tst","phone":"13812345678","gender":0,"longitude":121.48789949,"latitude":31.24916171,"province":"上海市","provinceId":"310000","city":"上海市","cityId":"310000","county":"闸北区","countyId":"310108","address":"新荟城","detail":"上海市闵行区莲花南路1388号","isDefault":0,"tag":"","status":0,"contactId":"1483087753105","userId":"blm_test"}]
      if(code === 0) {

        this.setState({
          contactList: data
        })
      }
      handleClose()
    })
  }
  handleToggleContactForm(editContact) {
    // console.log(contact)
    Mask(<SlidePage target='right' type='root'>
           <ContactForm { ...{ editContact } } onSuccess={ this.handleFormSuccess.bind(this) }  />
         </SlidePage>, { mask: false })
    // this.setState({ bContactFormShow: bShow, editContact: contact })
  }
  handleDeleteContact(contact) {
    alert('删除', '确定删除么?', [
      { text: '取消', onPress: () => console.log('cancel') },
      { text: '确定', onPress: () => {
        const { contactId, userId } = contact
        const handleClose = Loading()
        send('/user/v1/contact', { contactId, userId }, 'delete')
        .then(({ code, data, message }) => {
          if(code === 0) {
            this.fetchContact()
          }
          handleClose()
        })
      }, style: { fontWeight: 'bold' } },
    ])

  }
  handleFormSuccess() {
    this.fetchContact()
  }
  componentWillMount() { this.fetchContact() }
  handleSuccess(contact) {
    const { handleChange, handleContainerClose } = this.props
    handleChange(contact)
    handleContainerClose()
  }
  render() {
    const { loading, bContactFormShow, contactList, editContact } = this.state
    const { contact = {} } = this.props
    const { contactId } = contact
    //console.log('editContact', editContact);
    return (
        <div className='contact-list'>
          <List>
            <ListItem>
              <div className='tcenter black font-x'>选择收货地址</div>
            </ListItem>
          </List>
          <WhiteSpace size='lg' />
          <List>
            <ListItem arrow='horizontal' onClick={ () => this.handleToggleContactForm() }>
              <span className='add-icon' ><img src={ add_src } /></span>
              <span className='add-text' >新增收货地址</span>
            </ListItem>
          </List>
          <WhiteSpace size='lg' />
          <div className='touch-layer' style={{ height: 'calc(100% - 2.42rem)' }}>
          {
            contactList.map((contact, index) => (
                <div key={ `contact-list-${ index }` }>
                  <Contact  checked={ contact.contactId === contactId } { ...{ index, contact } }
                            onChooseContact={ () => this.handleSuccess(contact) }
                            onDeleteContact={ () => this.handleDeleteContact(contact) }
                            onEditContact  ={ () => this.handleToggleContactForm(contact)} />
                  <WhiteSpace size='lg' />
                </div>

            ))
          }
          </div>
        </div>
    )
  }
}

export default CustomerList


const Contact = ({ contact, index, checked, onChooseContact, onEditContact, onDeleteContact }) => {
  const { name, gender = '', phone, tag, detail, province, county, address } = contact

  return (
    <List>
      <ListItem extra={ <ContactControl { ...{ onEditContact, onDeleteContact, contact } } /> } align="middle" wrap={ true }
            thumb={ checked ? <img src={ gou_src } alt='' style={{ width: '.33rem', height:'.33rem' }} /> : <div style={{width: '.33rem'}}></div> }
            multipleLine >
        <div onClick={ onChooseContact }>
          <div className='info'>
            <span>{ name }</span>
            <span>{ typeof gender == 'undefined' ? '' : gender == 1 ? '女士' : '先生' }</span>
            <span>{ phone }</span>
            <span>{ tag && <span className='tag orange'>{ tag }</span>}</span>
          </div>
          <WhiteSpace size='md' />
          <div className='addr'>
              { province && <span>{ province }</span> }
              { county   && <span>{ county   }</span> }
              { address  && <span>{ address  }</span> }
          </div>
          <WhiteSpace size='md' />
          <div className='addr'>
              { detail && <span>{ detail }</span> }
          </div>
        </div>
      </ListItem>
    </List>
  )
}

const ContactControl = ({ onEditContact, onDeleteContact, contact }) => (
  <div>
    <Icon type='delete' className='gray-4 font-m' onClick={ onDeleteContact } />
    <span className='gray-5 font-m' style={{ margin: '0 .30rem' }}>|</span>
    <Icon type='edit' className='gray-4 font-m' onClick={ onEditContact } />
  </div>
)
