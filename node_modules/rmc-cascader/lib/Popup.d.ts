/// <reference types="react" />
import React from 'react';
import { IPopupPickerProps } from 'rmc-picker/lib/PopupPickerTypes';
import { CascaderProps, CascaderValue } from './CascaderTypes';
export interface PopupCascaderProps extends IPopupPickerProps {
    cascader: React.ReactElement<CascaderProps>;
    visible?: boolean;
    value?: CascaderValue;
    onChange?: (date: CascaderValue) => void;
    onVisibleChange?: (visible: boolean) => void;
}
export default class PopupCascader extends React.Component<PopupCascaderProps, any> {
    cascader: any;
    static defaultProps: {
        prefixCls: string;
        onVisibleChange: () => void;
        onChange: () => void;
    };
    constructor(props: PopupCascaderProps);
    componentWillReceiveProps(nextProps: any): void;
    onPickerChange: (pickerValue: any) => void;
    onOk: () => void;
    saveRef: (cascader: any) => void;
    setVisibleState(visible: any): void;
    fireVisibleChange: (visible: any) => void;
    render(): JSX.Element;
}
