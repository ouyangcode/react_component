'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Picker = require('rmc-picker/lib/Picker.web');

var _Picker2 = _interopRequireDefault(_Picker);

var _CascaderMixin = require('./CascaderMixin');

var _CascaderMixin2 = _interopRequireDefault(_CascaderMixin);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var __assign = undefined && undefined.__assign || Object.assign || function (t) {
    for (var s, i = 1, n = arguments.length; i < n; i++) {
        s = arguments[i];
        for (var p in s) {
            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
        }
    }
    return t;
};

var Cascader = _react2["default"].createClass({
    displayName: 'Cascader',

    mixins: [_CascaderMixin2["default"]],
    getDefaultProps: function getDefaultProps() {
        return {
            prefixCls: 'rmc-cascader',
            pickerPrefixCls: 'rmc-picker',
            data: [],
            disabled: false
        };
    },
    render: function render() {
        var _this = this;

        var props = this.props;
        var prefixCls = props.prefixCls,
            pickerPrefixCls = props.pickerPrefixCls,
            className = props.className,
            rootNativeProps = props.rootNativeProps,
            disabled = props.disabled,
            pickerItemStyle = props.pickerItemStyle;

        var value = this.state.value;
        var childrenTree = this.getChildrenTree();
        var cols = this.getColArray().map(function (_, i) {
            // do not remove ${prefixCls}-main-item
            return _react2["default"].createElement("div", { key: i, className: prefixCls + '-item ' + prefixCls + '-main-item' }, _react2["default"].createElement(_Picker2["default"], { itemStyle: pickerItemStyle, disabled: disabled, prefixCls: pickerPrefixCls, selectedValue: value[i], onValueChange: _this.onValueChange.bind(_this, i) }, childrenTree[i] || []));
        });
        return _react2["default"].createElement("div", __assign({}, rootNativeProps, { className: (0, _classnames2["default"])(className, prefixCls) }), cols);
    }
});
exports["default"] = Cascader;
module.exports = exports['default'];