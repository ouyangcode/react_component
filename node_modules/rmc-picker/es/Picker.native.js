import _extends from 'babel-runtime/helpers/extends';
import React from 'react';
import NativePicker from './NativePicker';
import isChildrenEqual from './isChildrenEqual';
var Item = NativePicker.Item;
var Picker = React.createClass({
    displayName: 'Picker',
    getDefaultProps: function getDefaultProps() {
        return {
            pure: true,
            children: []
        };
    },
    getValue: function getValue() {
        return this.props.selectedValue || this.props.children && this.props.children[0] && this.props.children[0].value;
    },
    shouldComponentUpdate: function shouldComponentUpdate(nextProps) {
        return this.props.selectedValue !== nextProps.selectedValue || !isChildrenEqual(this.props.children, nextProps.children, this.props.pure);
    },
    render: function render() {
        var children = this.props.children.map(function (c) {
            return React.createElement(Item, _extends({}, c, { key: c.value + '' }));
        });
        return React.createElement(
            NativePicker,
            this.props,
            children
        );
    }
});
export default Picker;